#!/bin/sh

# DO WHATEVER YOU WANT TO PUBLIC LICENSE                                                                          
# 0. You just DO WHATEVER YOU WANT TO.                                                                            
#    As simple as that. 

CWD=$(pwd)
if [ "$TMP" = "" ]; then
  TMP=/tmp
fi

if [ -z "$ARCH" ]; then             
  case "$( uname -m )" in      
    i?86) ARCH=i586 ;;              
    arm*) ARCH=arm ;;                 
       *) ARCH=$( uname -m ) ;;       
  esac                                        
fi 

BUILD=1sml
APP=ninja
VERSION=1.8.2
PKG=$TMP/package-$APP

if [ "$ARCH" = "i586" ]; then                                                                                     
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"                                                                         
  LIBDIRSUFFIX=""                                                                                                 
elif [ "$ARCH" = "i686" ]; then                                                            
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"                                                  
  LIBDIRSUFFIX=""                                                                          
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"        
  LIBDIRSUFFIX=""                   
else                           
  SLKCFLAGS="-O2"                   
  LIBDIRSUFFIX=""                     
fi 

rm -rf $PKG
mkdir -p $TMP $PKG
rm -rf $TMP/$APP-$VERSION

cd $TMP || exit
tar -xvf $CWD/$APP-$VERSION.tar.?z
cd $APP-$VERSION
chown -R root:root .

CXXFLAGS="$mcf" \
CFLAGS="$mcf" \
 python configure.py --bootstrap

install -D -m0755 ninja $PKG/usr/bin/ninja
install -D -m0644 misc/bash-completion $PKG/usr/share/bash-completion/completions/ninja
install -D -m0644 misc/zsh-completion $PKG/usr/share/zsh/site-functions/_ninja
install -D -m0644 misc/ninja.vim $PKG/usr/share/vim/vimfiles/syntax/ninja.vim
install -D -m0644 misc/ninja-mode.el $PKG/usr/share/emacs/site-lisp/ninja-mode.el

cd $PKG                                                                                                           
echo "Stripping binaries and shared objects, if any..."                                                           
 find . | xargs file | grep "executable" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null   
 find . | xargs file | grep "shared object" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null
                                                                                           
mkdir -p $PKG/install                                                                                             
cat $CWD/slack-desc > $PKG/install/slack-desc                                                                     
cat $CWD/doinst.sh > $PKG/install/doinst.sh                                                                       
                                                                                           
cd $PKG
/sbin/makepkg -l y -c n $TMP/$APP-$VERSION-$ARCH-$BUILD.txz 
